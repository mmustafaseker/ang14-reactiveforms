{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { emailOrPhoneRequired } from '../shared/customerror.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction JobportalComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1, \" First Name is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobportalComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, JobportalComponent_div_10_div_1_Template, 2, 0, \"div\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.firstName == null ? null : ctx_r0.firstName.errors == null ? null : ctx_r0.firstName.errors[\"required\"]);\n  }\n}\nfunction JobportalComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1, \" Email or Phone must be selected \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobportalComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, JobportalComponent_div_28_div_1_Template, 2, 0, \"div\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.contactType == null ? null : ctx_r1.contactType.errors == null ? null : ctx_r1.contactType.errors[\"emailOrPhoneRequired\"]);\n  }\n}\nfunction JobportalComponent_ng_container_45_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1, \" First Name is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobportalComponent_ng_container_45_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, JobportalComponent_ng_container_45_div_7_div_1_Template, 2, 0, \"div\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.firstName == null ? null : ctx_r7.firstName.errors == null ? null : ctx_r7.firstName.errors[\"required\"]);\n  }\n}\nfunction JobportalComponent_ng_container_45_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 33)(2, \"div\", 34)(3, \"div\", 4)(4, \"label\", 35);\n    i0.ɵɵtext(5, \"Program Language\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 36);\n    i0.ɵɵtemplate(7, JobportalComponent_ng_container_45_div_7_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 34)(9, \"div\", 4)(10, \"label\", 35);\n    i0.ɵɵtext(11, \"Experience\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 37);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 38)(14, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function JobportalComponent_ng_container_45_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const i_r6 = restoredCtx.index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.removeSkillFormGroup(i_r6));\n    });\n    i0.ɵɵtext(15, \" Delete \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r6 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r6);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"for\", \"txtProgramLanguage\" + i_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"txtProgramLanguage\" + i_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r2.firstName == null ? null : ctx_r2.firstName.invalid) && ((ctx_r2.firstName == null ? null : ctx_r2.firstName.touched) || (ctx_r2.firstName == null ? null : ctx_r2.firstName.dirty)));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"for\", \"txtExperience\" + i_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"txtExperience\" + i_r6);\n  }\n}\nexport class JobportalComponent {\n  /**\r\n   *\r\n   */\n  constructor(fb) {\n    this.fb = fb;\n    this.jobForm = this.fb.group({\n      firstName: ['', [Validators.required]],\n      lastName: [''],\n      contacts: this.fb.group({\n        contactType: ['-1', [emailOrPhoneRequired()]],\n        email: [''],\n        phone: ['']\n      }),\n      skills: this.fb.array([])\n    });\n    this.preview = \"\";\n  }\n  ngOnInit() {}\n  save() {\n    this.preview = JSON.stringify(this.jobForm.value);\n  }\n  get firstName() {\n    return this.jobForm.get('firstName');\n  }\n  get contactType() {\n    return this.jobForm.get('contacts.contactType');\n  }\n  getProgramLanguage() {\n    return this.jobForm.get('contacts.contactType');\n  }\n  get skillForms() {\n    return this.jobForm.get('skills');\n  }\n  addASkillFormGroup() {\n    this.skillForms.push(this.fb.group({\n      programLanguage: ['', [Validators.required]],\n      experience: [0]\n    }));\n  }\n  removeSkillFormGroup(index) {\n    this.skillForms.removeAt(index);\n  }\n  sampleSetValue() {\n    this.jobForm.setValue({\n      firstName: 'mustafa',\n      lastName: 'seker',\n      contacts: {\n        contactType: \"email\",\n        phone: \"123546\",\n        email: \"test@test.com\"\n      },\n      skills: []\n    });\n  }\n  samplePatchValue() {\n    this.jobForm.patchValue({\n      firstName: 'test',\n      contacts: {\n        email: 'deneme@deneme.com'\n      }\n    });\n  }\n}\nJobportalComponent.ɵfac = function JobportalComponent_Factory(t) {\n  return new (t || JobportalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nJobportalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: JobportalComponent,\n  selectors: [[\"app-jobportal\"]],\n  decls: 59,\n  vars: 5,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col\", \"col-md-8\", 2, \"overflow-y\", \"scroll\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"txtName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"txtName\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"txtLastName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"txtLastName\", \"formControlName\", \"lastName\", 1, \"form-control\"], [\"formGroupName\", \"contacts\", 1, \"mb-3\"], [1, \"col\", \"col-md-4\", \"offset-md-4\"], [\"for\", \"ddlContactType\", 1, \"form-label\"], [\"formControlName\", \"contactType\", \"aria-label\", \"Default select example\", 1, \"form-select\"], [\"value\", \"-1\"], [\"value\", \"email\"], [\"value\", \"phone\"], [1, \"col\", \"col-md-6\"], [\"for\", \"txtEmail\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"txtEmail\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"txtPhone\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"txtPhone\", \"formControlName\", \"phone\", 1, \"form-control\"], [\"formArrayName\", \"skills\", 1, \"mb-3\"], [1, \"col\", \"col-md-4offset-md-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"type\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"col\", \"colmd-2\"], [2, \"position\", \"fixed\"], [1, \"alert\", \"alert-danger\"], [\"class\", \"\", 4, \"ngIf\"], [1, \"\"], [1, \"row\", 3, \"formGroupName\"], [1, \"col\", \"col-md-5\"], [1, \"form-label\", 3, \"for\"], [\"type\", \"text\", \"formControlName\", \"programLanguage\", 1, \"form-control\", 3, \"id\"], [\"type\", \"text\", \"formControlName\", \"experience\", 1, \"form-control\", 3, \"id\"], [1, \"col\", \"col-md-2\", \"mt-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function JobportalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"legend\");\n      i0.ɵɵtext(2, \"Jop Portal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function JobportalComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n      i0.ɵɵtext(8, \" First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵtemplate(10, JobportalComponent_div_10_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 8);\n      i0.ɵɵtext(13, \" Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 10)(16, \"div\", 1)(17, \"div\", 11)(18, \"div\", 4)(19, \"label\", 12);\n      i0.ɵɵtext(20, \" Prefered Contact Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"select\", 13)(22, \"option\", 14);\n      i0.ɵɵtext(23, \"-Select-\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"option\", 15);\n      i0.ɵɵtext(25, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"option\", 16);\n      i0.ɵɵtext(27, \"Phone\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(28, JobportalComponent_div_28_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"div\", 1)(30, \"div\", 17)(31, \"div\", 4)(32, \"label\", 18);\n      i0.ɵɵtext(33, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"input\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"div\", 17)(36, \"div\", 4)(37, \"label\", 20);\n      i0.ɵɵtext(38, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 21);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(40, \"div\", 22)(41, \"div\", 1)(42, \"div\", 23)(43, \"button\", 24);\n      i0.ɵɵlistener(\"click\", function JobportalComponent_Template_button_click_43_listener() {\n        return ctx.addASkillFormGroup();\n      });\n      i0.ɵɵtext(44, \" Add a Skill \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(45, JobportalComponent_ng_container_45_Template, 16, 6, \"ng-container\", 25);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"button\", 26);\n      i0.ɵɵtext(47, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"br\")(49, \"br\");\n      i0.ɵɵelementStart(50, \"button\", 27);\n      i0.ɵɵlistener(\"click\", function JobportalComponent_Template_button_click_50_listener() {\n        return ctx.sampleSetValue();\n      });\n      i0.ɵɵtext(51, \" Test setValue() \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(52, \"br\")(53, \"br\");\n      i0.ɵɵelementStart(54, \"button\", 27);\n      i0.ɵɵlistener(\"click\", function JobportalComponent_Template_button_click_54_listener() {\n        return ctx.samplePatchValue();\n      });\n      i0.ɵɵtext(55, \" Test PatchValue() \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(56, \"div\", 28)(57, \"div\", 29);\n      i0.ɵɵtext(58);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.jobForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.firstName == null ? null : ctx.firstName.invalid) && ((ctx.firstName == null ? null : ctx.firstName.touched) || (ctx.firstName == null ? null : ctx.firstName.dirty)));\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngIf\", (ctx.contactType == null ? null : ctx.contactType.invalid) && ((ctx.contactType == null ? null : ctx.contactType.touched) || (ctx.contactType == null ? null : ctx.contactType.dirty)));\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.skillForms.controls);\n      i0.ɵɵadvance(13);\n      i0.ɵɵtextInterpolate1(\" \", ctx.preview, \" \");\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","emailOrPhoneRequired","i0","JobportalComponent","constructor","fb","group","firstName","required","lastName","contacts","contactType","email","phone","skills","array","ngOnInit","save","preview","JSON","stringify","jobForm","value","get","getProgramLanguage","skillForms","addASkillFormGroup","push","programLanguage","experience","removeSkillFormGroup","index","removeAt","sampleSetValue","setValue","samplePatchValue","patchValue","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\MustafaProje\\ang14-reactiveforms\\src\\app\\jobportal\\jobportal.component.ts","C:\\MustafaProje\\ang14-reactiveforms\\src\\app\\jobportal\\jobportal.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { emailOrPhoneRequired } from '../shared/customerror.directive';\n\n@Component({\n  selector: 'app-jobportal',\n  templateUrl: './jobportal.component.html',\n  styleUrls: ['./jobportal.component.css']\n})\nexport class JobportalComponent implements OnInit{\n\n  /**\n   *\n   */\n  constructor(private fb:FormBuilder) { }\n  jobForm = this.fb.group({\n    firstName:['',[Validators.required]],\n    lastName:[''],\n    contacts: this.fb.group({\n      contactType:['-1',[emailOrPhoneRequired()]],\n      email:[''],\n      phone:['']\n    }),\n    skills:this.fb.array([])\n  })\n\n\n\n  ngOnInit(): void {\n      \n  }\n\npreview:string=\"\";\n\n  save(){\n    this.preview=JSON.stringify(this.jobForm.value);\n  }\n\n  get firstName(){\n    return this.jobForm.get('firstName');\n  }\n\n  get contactType(){\n    return this.jobForm.get('contacts.contactType');\n  }\n\n  getProgramLanguage(){\n    return this.jobForm.get('contacts.contactType');\n  }\n\n  \n  get skillForms(){\n    return this.jobForm.get('skills') as FormArray;\n  }\n\n  addASkillFormGroup(){\n    this.skillForms.push(\n      this.fb.group({\n        programLanguage:['',[Validators.required]],\n        experience: [0]\n      })\n    ) ;\n  }\n\n\n  removeSkillFormGroup(index:number){\n    this.skillForms.removeAt(index);\n  }\n\n\n  sampleSetValue(){\n    this.jobForm.setValue({\n      firstName:'mustafa',\n      lastName:'seker',\n      contacts:{\n        contactType:\"email\",\n        phone:\"123546\",\n        email:\"test@test.com\"\n      },\n      skills:[],\n    })\n  }\n\n  samplePatchValue(){\n    this.jobForm.patchValue({\n      firstName:'test',\n      contacts:{\n        email:'deneme@deneme.com'\n      },\n    });\n  }\n}\n","<div class=\"container\">\n  <legend>Jop Portal</legend>\n  <div class=\"row\">\n    <div class=\"col col-md-8\" style=\"overflow-y: scroll\">\n      <form [formGroup]=\"jobForm\" (ngSubmit)=\"save()\">\n        <div class=\"mb-3\">\n          <label for=\"txtName\" class=\"form-label\"> First Name</label>\n\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"txtName\"\n            formControlName=\"firstName\"\n          />\n          <div\n            class=\"alert alert-danger\"\n            *ngIf=\"\n              firstName?.invalid && (firstName?.touched || firstName?.dirty)\n            \"\n          >\n            <div class=\"\" *ngIf=\"firstName?.errors?.['required']\">\n              First Name is Required\n            </div>\n          </div>\n        </div>\n\n        <div class=\"mb-3\">\n          <label for=\"txtLastName\" class=\"form-label\"> Last Name</label>\n\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"txtLastName\"\n            formControlName=\"lastName\"\n          />\n        </div>\n        <div class=\"mb-3\" formGroupName=\"contacts\">\n          <div class=\"row\">\n            <div class=\"col col-md-4 offset-md-4\">\n              <div class=\"mb-3\">\n                <label for=\"ddlContactType\" class=\"form-label\">\n                  Prefered Contact Type</label\n                >\n                <select\n                  class=\"form-select\"\n                  formControlName=\"contactType\"\n                  aria-label=\"Default select example\"\n                >\n                  <option value=\"-1\">-Select-</option>\n                  <option value=\"email\">Email</option>\n                  <option value=\"phone\">Phone</option>\n                </select>\n                <div\n                class=\"alert alert-danger\"\n                *ngIf=\"\n                contactType?.invalid && (contactType?.touched || contactType?.dirty)\n                \"\n              >\n                <div class=\"\" *ngIf=\"contactType?.errors?.['emailOrPhoneRequired']\">\n                  Email or Phone must be selected\n                </div>\n              </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col col-md-6\">\n              <div class=\"mb-3\">\n                <label for=\"txtEmail\" class=\"form-label\">Email</label>\n\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"txtEmail\"\n                  formControlName=\"email\"\n                />\n              </div>\n            </div>\n            <div class=\"col col-md-6\">\n              <div class=\"mb-3\">\n                <label for=\"txtPhone\" class=\"form-label\">Phone</label>\n\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"txtPhone\"\n                  formControlName=\"phone\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"mb-3\" formArrayName=\"skills\">\n          <div class=\"row\">\n            <div class=\"col col-md-4offset-md-4\">\n              <button\n                type=\"button\"\n                class=\"btn btn-primary\"\n                (click)=\"addASkillFormGroup()\"\n              >\n                Add a Skill\n              </button>\n            </div>\n          </div>\n\n          <ng-container\n            *ngFor=\"let skillForm of skillForms.controls; let i = index\"\n          >\n            <div class=\"row\" [formGroupName]=\"i\">\n              <div class=\"col col-md-5\">\n                <div class=\"mb-3\">\n                  <label [for]=\"'txtProgramLanguage' + i\" class=\"form-label\"\n                    >Program Language</label\n                  >\n\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    [id]=\"'txtProgramLanguage' + i\"\n                    formControlName=\"programLanguage\"\n                  />\n                  <div\n                  class=\"alert alert-danger\"\n                  *ngIf=\"\n                    firstName?.invalid && (firstName?.touched || firstName?.dirty)\n                  \"\n                >\n                  <div class=\"\" *ngIf=\"firstName?.errors?.['required']\">\n                    First Name is Required\n                  </div>\n                </div>\n                </div>\n              </div>\n              <div class=\"col col-md-5\">\n                <div class=\"mb-3\">\n                  <label [for]=\"'txtExperience' + i\" class=\"form-label\"\n                    >Experience</label\n                  >\n\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    [id]=\"'txtExperience' + i\"\n                    formControlName=\"experience\"\n                  />\n                </div>\n              </div>\n              <div class=\"col col-md-2 mt-4\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-danger\"\n                  (click)=\"removeSkillFormGroup(i)\"\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        <br />\n        <br />\n        <button type=\"type\" class=\"btn btn-primary\" (click)=\"sampleSetValue()\">\n          Test setValue()\n        </button>\n        <br />\n        <br />\n        <button\n          type=\"type\"\n          class=\"btn btn-primary\"\n          (click)=\"samplePatchValue()\"\n        >\n          Test PatchValue()\n        </button>\n      </form>\n    </div>\n    <div class=\"col colmd-2\">\n      <div style=\"position: fixed\">\n        {{ preview }}\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}